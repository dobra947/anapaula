---
export interface Obra {
  slug: string;
  title: string;
  image: string;
  alt: string;
  technique: string;
  date: string;
  summary: string;
}

export interface Props {
  obras: Obra[];
  featured?: boolean;
}

const { obras, featured = false } = Astro.props;
const displayObras = featured ? obras.slice(0, 6) : obras;
---

<section class="gallery" aria-labelledby={featured ? "featured-title" : "gallery-title"}>
  {featured && (
    <h2 id="featured-title" class="gallery-title">Obras destacadas</h2>
  )}
  {!featured && (
    <h1 id="gallery-title" class="gallery-title">Todas las obras</h1>
  )}

  <div class="gallery-grid">
    {displayObras.map((obra) => (
      <article class="artwork-card">
        <a href={`/obras/${obra.slug}`} class="artwork-link">
          <div class="artwork-image-container">
            <img
              src={obra.image}
              alt={obra.alt}
              loading="lazy"
              width="400"
              height="300"
              class="artwork-image"
            />
            <div class="artwork-overlay">
              <h3 class="artwork-title">{obra.title}</h3>
              <p class="artwork-meta">{obra.technique} • {obra.date}</p>
            </div>
          </div>
        </a>
        <div class="artwork-info">
          <h3 class="artwork-title-mobile">{obra.title}</h3>
          <p class="artwork-summary">{obra.summary}</p>
          <p class="artwork-meta-mobile">{obra.technique} • {obra.date}</p>
        </div>
      </article>
    ))}
  </div>

  {featured && (
    <div class="gallery-cta">
      <a href="/obras" class="view-all-link">Ver todas las obras</a>
    </div>
  )}
</section>

<!-- Lightbox Dialog -->
<dialog id="lightbox" class="lightbox" aria-labelledby="lightbox-title">
  <div class="lightbox-content">
    <button class="lightbox-close" aria-label="Cerrar imagen ampliada">&times;</button>
    <img id="lightbox-image" src="" alt="" class="lightbox-image" />
    <div class="lightbox-info">
      <h3 id="lightbox-title" class="lightbox-title"></h3>
      <p class="lightbox-meta"></p>
    </div>
  </div>
</dialog>

<style>
  .gallery {
    margin: var(--space-8) 0;
  }

  .gallery-title {
    font-family: var(--font-family-display);
    font-size: 2.5rem;
    margin: 0 0 var(--space-6) 0;
    text-align: center;
    position: relative;
  }

  .gallery-title::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 2px;
    background: var(--color-black);
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-4);
    margin-bottom: var(--space-6);
  }

  .artwork-card {
    background: var(--color-white);
    border: 1px solid #e0e0e0;
    border-radius: var(--border-radius);
    overflow: hidden;
    transition: var(--transition);
    position: relative;
  }

  .artwork-card:hover {
    box-shadow: 0 8px 24px rgba(0,0,0,0.1);
    transform: translateY(-2px);
  }

  .artwork-link {
    display: block;
    text-decoration: none;
    color: inherit;
  }

  .artwork-image-container {
    position: relative;
    overflow: hidden;
    aspect-ratio: 4/3;
  }

  .artwork-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--transition);
  }

  .artwork-card:hover .artwork-image {
    transform: scale(1.05);
  }

  .artwork-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0,0,0,0.8));
    color: var(--color-white);
    padding: var(--space-4);
    transform: translateY(100%);
    transition: var(--transition);
  }

  .artwork-card:hover .artwork-overlay {
    transform: translateY(0);
  }

  .artwork-title {
    margin: 0 0 var(--space-1) 0;
    font-size: 1.1rem;
    font-weight: 600;
  }

  .artwork-meta {
    margin: 0;
    font-size: 0.9rem;
    opacity: 0.9;
  }

  .artwork-info {
    padding: var(--space-3);
    display: none;
  }

  .artwork-title-mobile,
  .artwork-meta-mobile {
    display: none;
  }

  .artwork-summary {
    margin: var(--space-1) 0;
    font-size: 0.9rem;
    color: var(--color-gray);
    line-height: 1.4;
  }

  .gallery-cta {
    text-align: center;
    margin-top: var(--space-6);
  }

  .view-all-link {
    display: inline-block;
    padding: var(--space-2) var(--space-4);
    border: 2px solid var(--color-black);
    color: var(--color-black);
    text-decoration: none;
    border-radius: var(--border-radius);
    transition: var(--transition);
    font-weight: 500;
  }

  .view-all-link:hover {
    background: var(--color-black);
    color: var(--color-white);
  }

  /* Lightbox */
  .lightbox {
    padding: 0;
    border: none;
    background: rgba(0,0,0,0.9);
    backdrop-filter: blur(4px);
    max-width: 90vw;
    max-height: 90vh;
    border-radius: var(--border-radius);
  }

  .lightbox::backdrop {
    background: rgba(0,0,0,0.8);
  }

  .lightbox-content {
    position: relative;
    padding: var(--space-4);
    max-width: 800px;
  }

  .lightbox-close {
    position: absolute;
    top: var(--space-2);
    right: var(--space-2);
    background: var(--color-white);
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    font-size: 1.5rem;
    cursor: pointer;
    z-index: 10;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition);
  }

  .lightbox-close:hover {
    background: var(--color-gray-light);
  }

  .lightbox-image {
    width: 100%;
    height: auto;
    max-height: 60vh;
    object-fit: contain;
    border-radius: var(--border-radius);
  }

  .lightbox-info {
    color: var(--color-white);
    text-align: center;
    margin-top: var(--space-3);
  }

  .lightbox-title {
    margin: 0 0 var(--space-1) 0;
    font-size: 1.2rem;
  }

  .lightbox-meta {
    margin: 0;
    opacity: 0.8;
  }

  /* Mobile responsive */
  @media (max-width: 768px) {
    .gallery-grid {
      grid-template-columns: 1fr;
      gap: var(--space-3);
    }

    .artwork-overlay {
      display: none;
    }

    .artwork-info {
      display: block;
    }

    .artwork-title-mobile,
    .artwork-meta-mobile {
      display: block;
    }

    .artwork-title-mobile {
      margin: 0 0 var(--space-1) 0;
      font-size: 1.1rem;
      font-weight: 600;
    }

    .artwork-meta-mobile {
      margin: var(--space-1) 0 0 0;
      font-size: 0.85rem;
      color: var(--color-gray);
    }

    .lightbox-content {
      padding: var(--space-2);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .artwork-card:hover {
      transform: none;
    }

    .artwork-card:hover .artwork-image {
      transform: none;
    }

    .artwork-overlay {
      transform: translateY(0);
      background: rgba(0,0,0,0.8);
    }
  }
</style>

<script>
  // Lightbox functionality
  const lightbox = document.getElementById('lightbox') as HTMLDialogElement;
  const lightboxImage = document.getElementById('lightbox-image') as HTMLImageElement;
  const lightboxTitle = document.getElementById('lightbox-title') as HTMLElement;
  const lightboxMeta = document.querySelector('.lightbox-meta') as HTMLElement;
  const lightboxClose = document.querySelector('.lightbox-close') as HTMLButtonElement;

  // Close lightbox function
  function closeLightbox() {
    lightbox.close();
  }

  // Event listeners
  lightboxClose?.addEventListener('click', closeLightbox);

  lightbox?.addEventListener('click', (e) => {
    if (e.target === lightbox) {
      closeLightbox();
    }
  });

  // Keyboard navigation
  lightbox?.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      closeLightbox();
    }
  });

  // Add click handlers to artwork images
  document.querySelectorAll('.artwork-image').forEach((img) => {
    img.addEventListener('click', (e) => {
      e.preventDefault();
      const image = e.target as HTMLImageElement;
      const card = image.closest('.artwork-card');
      const title = card?.querySelector('.artwork-title')?.textContent || '';
      const meta = card?.querySelector('.artwork-meta')?.textContent || '';

      lightboxImage.src = image.src;
      lightboxImage.alt = image.alt;
      lightboxTitle.textContent = title;
      lightboxMeta.textContent = meta;

      lightbox.showModal();
    });
  });
</script>
